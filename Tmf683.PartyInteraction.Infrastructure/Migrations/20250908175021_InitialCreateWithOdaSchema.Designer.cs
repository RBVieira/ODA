// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tmf683.PartyInteraction.Infrastructure.Data;

#nullable disable

namespace Tmf683.PartyInteraction.Infrastructure.Migrations
{
    [DbContext(typeof(PartyInteractionDbContext))]
    [Migration("20250908175021_InitialCreateWithOdaSchema")]
    partial class InitialCreateWithOdaSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ODA")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.AttachmentRefOrValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InteractionItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MimeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferredType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@referredType");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<long?>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ValidForEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ValidForStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InteractionItemId");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("Attachments", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.ExternalIdentifier", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<string>("ExternalIdType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalIdValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("ExternalIdentifiers", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("InteractionItems", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.InteractionRelationship", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferredType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@referredType");

                    b.Property<string>("RelationshipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("TargetInteractionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("InteractionRelationships", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.Note", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("InteractionItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PartyInteractionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("InteractionItemId");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("Notes", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InteractionEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InteractionStartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.ToTable("PartyInteractions", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.RelatedChannel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferredType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@referredType");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("RelatedChannels", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.RelatedPartyOrPartyRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BaseType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@baseType");

                    b.Property<string>("Href")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InteractionItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartyInteractionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReferredType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@referredType");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchemaLocation")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@schemaLocation");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("@type");

                    b.HasKey("Id");

                    b.HasIndex("InteractionItemId");

                    b.HasIndex("PartyInteractionId");

                    b.ToTable("RelatedParties", "ODA");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.AttachmentRefOrValue", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", "InteractionItem")
                        .WithMany("Attachment")
                        .HasForeignKey("InteractionItemId");

                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("Attachment")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InteractionItem");

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.ExternalIdentifier", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("ExternalIdentifier")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("InteractionItem")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.InteractionRelationship", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("InteractionRelationship")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.Note", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", "InteractionItem")
                        .WithMany("Note")
                        .HasForeignKey("InteractionItemId");

                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("Note")
                        .HasForeignKey("PartyInteractionId");

                    b.Navigation("InteractionItem");

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.RelatedChannel", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("RelatedChannel")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.RelatedPartyOrPartyRole", b =>
                {
                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", "InteractionItem")
                        .WithMany("RelatedParty")
                        .HasForeignKey("InteractionItemId");

                    b.HasOne("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", "PartyInteraction")
                        .WithMany("RelatedParty")
                        .HasForeignKey("PartyInteractionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InteractionItem");

                    b.Navigation("PartyInteraction");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.InteractionItem", b =>
                {
                    b.Navigation("Attachment");

                    b.Navigation("Note");

                    b.Navigation("RelatedParty");
                });

            modelBuilder.Entity("Tmf683.PartyInteraction.Domain.Entities.PartyInteraction", b =>
                {
                    b.Navigation("Attachment");

                    b.Navigation("ExternalIdentifier");

                    b.Navigation("InteractionItem");

                    b.Navigation("InteractionRelationship");

                    b.Navigation("Note");

                    b.Navigation("RelatedChannel");

                    b.Navigation("RelatedParty");
                });
#pragma warning restore 612, 618
        }
    }
}
